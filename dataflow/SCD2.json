{
	"name": "SCD2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Customers",
						"type": "DatasetReference"
					},
					"name": "Customers"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSQLDB",
						"type": "DatasetReference"
					},
					"name": "Customer1Table"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQLDB",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSQLDB",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "AddingIsActive",
					"description": "Creating/updating the columns ' Customer Id, First Name, Last Name, Company, City, Country, Phone 1, Phone 2, Email, Subscription Date, Website, IsActive'"
				},
				{
					"name": "select1"
				},
				{
					"name": "lookupsink"
				},
				{
					"name": "filterexistingrows"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedcolupdateIsActive"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Index as string,",
				"          {Customer Id} as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          {Phone 1} as string,",
				"          {Phone 2} as string,",
				"          Email as string,",
				"          {Subscription Date} as string,",
				"          Website as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Customers",
				"source(output(",
				"          Surrogate_key as integer,",
				"          index as string,",
				"          customerid as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          company as string,",
				"          city as string,",
				"          country as string,",
				"          phone1 as string,",
				"          phone2 as string,",
				"          email as string,",
				"          subscription_date as string,",
				"          website as string,",
				"          IsActive as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select * from customers where IsActive=1',",
				"     format: 'query') ~> Customer1Table",
				"Customers derive(IsActive = 1) ~> AddingIsActive",
				"Customer1Table select(mapColumn(",
				"          SQL_Surrogate_key = Surrogate_key,",
				"          SQL_index = index,",
				"          SQL_customerid = customerid,",
				"          SQL_first_name = first_name,",
				"          SQL_last_name = last_name,",
				"          SQL_company = company,",
				"          SQL_city = city,",
				"          SQL_country = country,",
				"          SQL_phone1 = phone1,",
				"          SQL_phone2 = phone2,",
				"          SQL_email = email,",
				"          SQL_subscription_date = subscription_date,",
				"          SQL_website = website,",
				"          SQL_IsActive = IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"Customers, select1 lookup({Customer Id} == SQL_customerid,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookupsink",
				"lookupsink filter(!isNull(SQL_customerid)) ~> filterexistingrows",
				"filterexistingrows select(mapColumn(",
				"          SQL_Surrogate_key,",
				"          SQL_index,",
				"          SQL_customerid,",
				"          SQL_first_name,",
				"          SQL_last_name,",
				"          SQL_company,",
				"          SQL_city,",
				"          SQL_country,",
				"          SQL_phone1,",
				"          SQL_phone2,",
				"          SQL_email,",
				"          SQL_subscription_date,",
				"          SQL_website,",
				"          SQL_IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(SQL_IsActive = 0) ~> derivedcolupdateIsActive",
				"derivedcolupdateIsActive alterRow(updateIf(1==1)) ~> alterRow1",
				"AddingIsActive sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Surrogate_key as integer,",
				"          customerid as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          company as string,",
				"          city as string,",
				"          country as string,",
				"          phone as string,",
				"          email as string,",
				"          subscription_date as date,",
				"          website as string,",
				"          IsActive as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          customerid = {Customer Id},",
				"          first_name = {First Name},",
				"          last_name = {Last Name},",
				"          company = Company,",
				"          city = City,",
				"          country = Country,",
				"          phone = {Phone 1},",
				"          email = Email,",
				"          website = Website,",
				"          IsActive",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Surrogate_key as integer,",
				"          customerid as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          company as string,",
				"          city as string,",
				"          country as string,",
				"          phone as string,",
				"          email as string,",
				"          subscription_date as date,",
				"          website as string,",
				"          IsActive as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['Surrogate_key','customerid','first_name','last_name','city','country'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Surrogate_key = SQL_Surrogate_key,",
				"          customerid = SQL_customerid,",
				"          first_name = SQL_first_name,",
				"          last_name = SQL_last_name,",
				"          company = SQL_company,",
				"          city = SQL_city,",
				"          country = SQL_country,",
				"          phone = SQL_phone1,",
				"          email = SQL_email,",
				"          subscription_date = SQL_subscription_date,",
				"          website = SQL_website,",
				"          IsActive = SQL_IsActive",
				"     )) ~> sink2"
			]
		}
	}
}