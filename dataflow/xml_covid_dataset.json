{
	"name": "xml_covid_dataset",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_azure_blob_covid_dataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Azure_SQL_DB_Covid",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          row as (row as ({@_address} as string, {@_id} as string, {@_position} as boolean, {@_uuid} as string, age as string, age_num as double, estimate as double, flag as string, indicator as string, stub_label as string, stub_label_num as double, stub_name as string, stub_name_num as short, unit as string, unit_num as short, year as short, year_num as short)[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 10,",
				"     ignoreNoFilesFound: false,",
				"     validationMode: 'none',",
				"     namespaces: true) ~> source1",
				"source1 foldDown(unroll(row.row),",
				"     mapColumn(",
				"          address = row.row.{@_address},",
				"          id = row.row.{@_id},",
				"          position = row.row.{@_position},",
				"          uuid = row.row.{@_uuid},",
				"          age = row.row.age,",
				"          age_num = row.row.age_num,",
				"          estimate = row.row.estimate,",
				"          flag = row.row.flag,",
				"          indicator = row.row.indicator,",
				"          stub_label = row.row.stub_label,",
				"          stub_label_num = row.row.stub_label_num,",
				"          stub_name = row.row.stub_name,",
				"          stub_name_num = row.row.stub_name_num,",
				"          unit = row.row.unit,",
				"          unit_num = row.row.unit_num,",
				"          year = row.row.year,",
				"          year_num = row.row.year_num",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          address,",
				"          id,",
				"          position,",
				"          uuid,",
				"          age,",
				"          age_num,",
				"          estimate,",
				"          flag,",
				"          indicator,",
				"          stub_label,",
				"          stub_label_num,",
				"          stub_name,",
				"          stub_name_num,",
				"          unit,",
				"          unit_num,",
				"          year,",
				"          year_num",
				"     )) ~> sink1"
			]
		}
	}
}