{
	"name": "HandlingHistory",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Customers",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSQLDB",
						"type": "DatasetReference"
					},
					"name": "srclookup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQLDB",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "select1"
				},
				{
					"name": "Insert"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				},
				{
					"name": "update"
				},
				{
					"name": "derivedColumnipdate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Index as string,",
				"          {Customer Id} as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          {Phone 1} as string,",
				"          {Phone 2} as string,",
				"          Email as string,",
				"          {Subscription Date} as string,",
				"          Website as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Surrogate_key as integer,",
				"          index as string,",
				"          customerid as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          company as string,",
				"          city as string,",
				"          country as string,",
				"          phone1 as string,",
				"          phone2 as string,",
				"          email as string,",
				"          subscription_date as string,",
				"          website as string,",
				"          IsActive as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srclookup",
				"source1, srclookup lookup({Customer Id} == customerid,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"srclookup select(mapColumn(",
				"          lkp_Surrogate_key = Surrogate_key,",
				"          lkp_index = index,",
				"          lkp_customerid = customerid,",
				"          lkp_first_name = first_name,",
				"          lkp_last_name = last_name,",
				"          lkp_company = company,",
				"          lkp_city = city,",
				"          lkp_country = country,",
				"          lkp_phone1 = phone1,",
				"          lkp_phone2 = phone2,",
				"          lkp_email = email,",
				"          lkp_subscription_date = subscription_date,",
				"          lkp_website = website,",
				"          lkp_IsActive = IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"lookup1 filter(isNull(customerid) || (first_name !={First Name}) || (last_name !={Last Name}) || (source1@City !=srclookup@city) || \r",
				"(source1@Country!=srclookup@country)) ~> Insert",
				"Insert derive(IsActive = 1) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Index = source1@Index,",
				"          {Customer Id},",
				"          {First Name},",
				"          {Last Name},",
				"          Company = source1@Company,",
				"          City = source1@City,",
				"          Country = source1@Country,",
				"          {Phone 1},",
				"          {Phone 2},",
				"          Email = source1@Email,",
				"          {Subscription Date},",
				"          Website = source1@Website,",
				"          IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"lookup1 filter(!isNull(customerid) && ((first_name!={First Name}) || (last_name!={Last Name}) || (source1@City !=srclookup@city) ||\r",
				"(source1@Country !=srclookup@country))) ~> update",
				"update derive(IsActive = 0) ~> derivedColumnipdate",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Surrogate_key as integer,",
				"          customerid as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          company as string,",
				"          city as string,",
				"          country as string,",
				"          phone as string,",
				"          email as string,",
				"          subscription_date as date,",
				"          website as string,",
				"          IsActive as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          customerid = {Customer Id},",
				"          first_name = {First Name},",
				"          last_name = {Last Name},",
				"          company = Company,",
				"          city = City,",
				"          country = Country,",
				"          phone = Index,",
				"          email = Email,",
				"          subscription_date = {Subscription Date},",
				"          website = Website,",
				"          IsActive",
				"     )) ~> sink1"
			]
		}
	}
}