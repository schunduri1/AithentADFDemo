{
	"name": "Dataflow_Books_xml",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_AzureBlob_books_xml",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_Azure_SQL_DB_Booksxml",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Azure_SQL_DB_Booksxml",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_Azure_SQL_DB_Languagexml",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "flatten1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Library as (Book as (BookDescription as string, BookName as string, Languages as (Language as string[]), PublishDate as date, PublisherLicNumber as integer)[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     validationMode: 'none',",
				"     namespaces: true) ~> source1",
				"source(output(",
				"          BookID as integer,",
				"          BookName as string,",
				"          BookDescription as string,",
				"          PublishDate as date,",
				"          PublisherLicNumber as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"derivedColumn1 split(1==1,",
				"     1==1,",
				"     disjoint: true) ~> split1@(Books, Language, Others)",
				"source1 foldDown(unrollMultiple(Library.Book,Library.Book.Languages.Language),",
				"     mapColumn(",
				"          BookDescription = Library.Book.BookDescription,",
				"          BookName = Library.Book.BookName,",
				"          Language = Library.Book.Languages.Language,",
				"          PublishDate = Library.Book.PublishDate,",
				"          PublisherLicNumber = Library.Book.PublisherLicNumber",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"split1@Language select(mapColumn(",
				"          Language,",
				"          BookId = ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"split1@Books select(mapColumn(",
				"          BookDescription,",
				"          BookName,",
				"          PublishDate,",
				"          PublisherLicNumber,",
				"          ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"flatten1 derive(ID = uuid()) ~> derivedColumn1",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BookID as integer,",
				"          BookName as string,",
				"          BookDescription as string,",
				"          PublishDate as date,",
				"          PublisherLicNumber as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          BookID = ID,",
				"          BookName,",
				"          BookDescription,",
				"          PublishDate,",
				"          PublisherLicNumber",
				"     )) ~> sink1",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LanguageID as integer,",
				"          BookID as integer,",
				"          LanguageName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          BookID = BookId,",
				"          LanguageName = Language",
				"     )) ~> sink2"
			]
		}
	}
}